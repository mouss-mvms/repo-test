{
  "openapi": "3.0.1",
  "info": {
    "title": "CATALOG API",
    "version": "0.1.0",
    "description": "Ma Ville Mon Shopping Catalog API"
  },
  "paths": {
    "/api/categories": {
      "get": {
        "summary": "list categories",
        "tags": [
          "Categories"
        ],
        "description": "Return the list of categories.",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/citizens/{id}/products": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier of the citizen.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "retrieve products of a citizen",
        "tags": [
          "Citizens"
        ],
        "description": "Retrieve a product from a citizen.",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier of the product.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "put": {
        "summary": "Update a product (offline)",
        "tags": [
          "Products"
        ],
        "description": "Return the product updated",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/BadRequest"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/NotFound"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Air jordan",
                    "description": "Name of product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "brand": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "status": {
                    "type": "string",
                    "example": "online",
                    "description": "Status of product"
                  },
                  "sellerAdvice": {
                    "type": "string",
                    "example": "Taille petite, prendre une demi pointure au dessus",
                    "description": "Advice from seller of product"
                  },
                  "isService": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tell if the product is a service"
                  },
                  "citizenAdvice": {
                    "type": "string",
                    "example": "Produit trouv√© un commercant trop sympa",
                    "description": "Advice from citizen of product"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 4,
                    "description": "Category id of product"
                  },
                  "variants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePrice": {
                          "type": "float",
                          "example": 44.99,
                          "description": "Price of product's variant"
                        },
                        "weight": {
                          "type": "float",
                          "example": 0.56,
                          "description": "Weight of product's variant (in Kg)"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 9,
                          "description": "Stock of product's variant"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": true,
                          "description": "Tell if this variant is the product's default variant"
                        },
                        "goodDeal": {
                          "type": "object",
                          "properties": {
                            "startAt": {
                              "type": "string",
                              "example": "20/07/2021",
                              "description": "Date of start of good deal"
                            },
                            "endAt": {
                              "type": "string",
                              "example": "27/07/2021",
                              "description": "Date of end of good deal"
                            },
                            "discount": {
                              "type": "integer",
                              "example": 45,
                              "description": "Amount of discount (in %)"
                            }
                          },
                          "required": [
                            "startAt,",
                            "endAt,",
                            "discount"
                          ]
                        },
                        "characteristic": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "color",
                                "description": "Name of characteristic"
                              },
                              "value": {
                                "type": "string",
                                "example": "Bleu",
                                "description": "Value of characteristic"
                              }
                            },
                            "required": [
                              "name,",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "basePrice,",
                        "weight,",
                        "quantity,",
                        "isDefault"
                      ]
                    }
                  },
                  "origin": {
                    "type": "string",
                    "example": "France",
                    "description": "Origin of product. (This field is mandatory for some categories)"
                  },
                  "allergens": {
                    "type": "string",
                    "example": "Contient des traces de fruit √† coques",
                    "description": "Advice of potencial allergens. (This field is mandatory for some categories)"
                  },
                  "composition": {
                    "type": "string",
                    "example": "Oeuf, sucre",
                    "description": "Composition of product. (This field is mandatory for some categories)"
                  }
                },
                "required": [
                  "id,",
                  "name,",
                  "description,",
                  "brand,",
                  "status,",
                  "sellerAdvice,",
                  "isService,",
                  "categoryId,",
                  "variants,",
                  "characteristics"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product (offline)",
        "tags": [
          "Products"
        ],
        "description": "Delete a product",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/BadRequest"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/NotFound"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve a product",
        "tags": [
          "Products"
        ],
        "description": "Retrieve a product",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/NotFound"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/products/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier of the product.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "X-client-id",
          "in": "header",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update a product",
        "tags": [
          "Products"
        ],
        "description": "Return the product updated",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Forbidden"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/NotFound"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Air jordan",
                    "description": "Name of product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "brand": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "status": {
                    "type": "string",
                    "example": "online",
                    "description": "Status of product"
                  },
                  "sellerAdvice": {
                    "type": "string",
                    "example": "Taille petite, prendre une demi pointure au dessus",
                    "description": "Advice from seller of product"
                  },
                  "isService": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tell if the product is a service"
                  },
                  "citizenAdvice": {
                    "type": "string",
                    "example": "Produit trouv√© un commercant trop sympa",
                    "description": "Advice from citizen of product"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 4,
                    "description": "Category id of product"
                  },
                  "variants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePrice": {
                          "type": "float",
                          "example": 44.99,
                          "description": "Price of product's variant"
                        },
                        "weight": {
                          "type": "float",
                          "example": 0.56,
                          "description": "Weight of product's variant (in Kg)"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 9,
                          "description": "Stock of product's variant"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": true,
                          "description": "Tell if this variant is the product's default variant"
                        },
                        "goodDeal": {
                          "type": "object",
                          "properties": {
                            "startAt": {
                              "type": "string",
                              "example": "20/07/2021",
                              "description": "Date of start of good deal"
                            },
                            "endAt": {
                              "type": "string",
                              "example": "27/07/2021",
                              "description": "Date of end of good deal"
                            },
                            "discount": {
                              "type": "integer",
                              "example": 45,
                              "description": "Amount of discount (in %)"
                            }
                          },
                          "required": [
                            "startAt,",
                            "endAt,",
                            "discount"
                          ]
                        },
                        "characteristic": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "color",
                                "description": "Name of characteristic"
                              },
                              "value": {
                                "type": "string",
                                "example": "Bleu",
                                "description": "Value of characteristic"
                              }
                            },
                            "required": [
                              "name,",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "basePrice,",
                        "weight,",
                        "quantity,",
                        "isDefault"
                      ]
                    }
                  },
                  "origin": {
                    "type": "string",
                    "example": "France",
                    "description": "Origin of product. (This field is mandatory for some categories)"
                  },
                  "allergens": {
                    "type": "string",
                    "example": "Contient des traces de fruit √† coques",
                    "description": "Advice of potencial allergens. (This field is mandatory for some categories)"
                  },
                  "composition": {
                    "type": "string",
                    "example": "Oeuf, sucre",
                    "description": "Composition of product. (This field is mandatory for some categories)"
                  }
                },
                "required": [
                  "id,",
                  "name,",
                  "description,",
                  "brand,",
                  "status,",
                  "sellerAdvice,",
                  "isService,",
                  "categoryId,",
                  "variants,",
                  "characteristics"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Products"
        ],
        "description": "Delete a product",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/BadRequest"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Forbidden"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/products": {
      "parameters": [
        {
          "name": "X-client-id",
          "in": "header",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Create a product",
        "tags": [
          "Products"
        ],
        "description": "Return the product created",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Product created"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/BadRequest"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Air jordan",
                    "description": "Name of product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "brand": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "status": {
                    "type": "string",
                    "example": "online",
                    "description": "Status of product"
                  },
                  "sellerAdvice": {
                    "type": "string",
                    "example": "Taille petite, prendre une demi pointure au dessus",
                    "description": "Advice from seller of product"
                  },
                  "isService": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tell if the product is a service"
                  },
                  "citizenAdvice": {
                    "type": "string",
                    "example": "Produit trouv√© un commercant trop sympa",
                    "description": "Advice from citizen of product"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 4,
                    "description": "Category id of product"
                  },
                  "shopId": {
                    "type": "integer",
                    "example": 453,
                    "description": "Shop id of product"
                  },
                  "variants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePrice": {
                          "type": "float",
                          "example": 44.99,
                          "description": "Price of product's variant"
                        },
                        "weight": {
                          "type": "float",
                          "example": 0.56,
                          "description": "Weight of product's variant (in Kg)"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 9,
                          "description": "Stock of product's variant"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": true,
                          "description": "Tell if this variant is the product's default variant"
                        },
                        "goodDeal": {
                          "type": "object",
                          "properties": {
                            "startAt": {
                              "type": "string",
                              "example": "20/07/2021",
                              "description": "Date of start of good deal"
                            },
                            "endAt": {
                              "type": "string",
                              "example": "27/07/2021",
                              "description": "Date of end of good deal"
                            },
                            "discount": {
                              "type": "integer",
                              "example": 45,
                              "description": "Amount of discount (in %)"
                            }
                          },
                          "required": [
                            "startAt,",
                            "endAt,",
                            "discount"
                          ]
                        },
                        "characteristic": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "color",
                                "description": "Name of characteristic"
                              },
                              "value": {
                                "type": "string",
                                "example": "Bleu",
                                "description": "Value of characteristic"
                              }
                            },
                            "required": [
                              "name,",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "basePrice,",
                        "weight,",
                        "quantity,",
                        "isDefault"
                      ]
                    }
                  },
                  "origin": {
                    "type": "string",
                    "example": "France",
                    "description": "Origin of product. (This field is mandatory for some categories)"
                  },
                  "allergens": {
                    "type": "string",
                    "example": "Contient des traces de fruit √† coques",
                    "description": "Advice of potencial allergens. (This field is mandatory for some categories)"
                  },
                  "composition": {
                    "type": "string",
                    "example": "Oeuf, sucre",
                    "description": "Composition of product. (This field is mandatory for some categories)"
                  }
                },
                "required": [
                  "id,",
                  "name,",
                  "description,",
                  "brand,",
                  "status,",
                  "sellerAdvice,",
                  "isService,",
                  "categoryId,",
                  "variants,",
                  "characteristics"
                ]
              }
            }
          }
        }
      }
    },
    "/api/products": {
      "post": {
        "summary": "Create a product (offline)",
        "tags": [
          "Products"
        ],
        "description": "Return the product created",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/BadRequest"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Air jordan",
                    "description": "Name of product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "brand": {
                    "type": "string",
                    "example": "Chaussures trop bien",
                    "description": "Description of product"
                  },
                  "status": {
                    "type": "string",
                    "example": "online",
                    "description": "Status of product"
                  },
                  "sellerAdvice": {
                    "type": "string",
                    "example": "Taille petite, prendre une demi pointure au dessus",
                    "description": "Advice from seller of product"
                  },
                  "isService": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tell if the product is a service"
                  },
                  "citizenAdvice": {
                    "type": "string",
                    "example": "Produit trouv√© un commercant trop sympa",
                    "description": "Advice from citizen of product"
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 4,
                    "description": "Category id of product"
                  },
                  "shopId": {
                    "type": "integer",
                    "example": 453,
                    "description": "Shop id of product"
                  },
                  "variants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePrice": {
                          "type": "float",
                          "example": 44.99,
                          "description": "Price of product's variant"
                        },
                        "weight": {
                          "type": "float",
                          "example": 0.56,
                          "description": "Weight of product's variant (in Kg)"
                        },
                        "quantity": {
                          "type": "integer",
                          "example": 9,
                          "description": "Stock of product's variant"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": true,
                          "description": "Tell if this variant is the product's default variant"
                        },
                        "goodDeal": {
                          "type": "object",
                          "properties": {
                            "startAt": {
                              "type": "string",
                              "example": "20/07/2021",
                              "description": "Date of start of good deal"
                            },
                            "endAt": {
                              "type": "string",
                              "example": "27/07/2021",
                              "description": "Date of end of good deal"
                            },
                            "discount": {
                              "type": "integer",
                              "example": 45,
                              "description": "Amount of discount (in %)"
                            }
                          },
                          "required": [
                            "startAt,",
                            "endAt,",
                            "discount"
                          ]
                        },
                        "characteristic": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "color",
                                "description": "Name of characteristic"
                              },
                              "value": {
                                "type": "string",
                                "example": "Bleu",
                                "description": "Value of characteristic"
                              }
                            },
                            "required": [
                              "name,",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "basePrice,",
                        "weight,",
                        "quantity,",
                        "isDefault"
                      ]
                    }
                  },
                  "origin": {
                    "type": "string",
                    "example": "France",
                    "description": "Origin of product. (This field is mandatory for some categories)"
                  },
                  "allergens": {
                    "type": "string",
                    "example": "Contient des traces de fruit √† coques",
                    "description": "Advice of potencial allergens. (This field is mandatory for some categories)"
                  },
                  "composition": {
                    "type": "string",
                    "example": "Oeuf, sucre",
                    "description": "Composition of product. (This field is mandatory for some categories)"
                  }
                },
                "required": [
                  "id,",
                  "name,",
                  "description,",
                  "brand,",
                  "status,",
                  "sellerAdvice,",
                  "isService,",
                  "categoryId,",
                  "variants,",
                  "characteristics"
                ]
              }
            }
          }
        }
      }
    },
    "/api/shops/{shop_id}/products": {
      "parameters": [
        {
          "name": "shop_id",
          "in": "path",
          "description": "Unique identifier of the desired shop.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "list products",
        "tags": [
          "Products"
        ],
        "description": "Retrieve all products from the given shop.",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/shops/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier of the desired shop.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "shop informations",
        "tags": [
          "Shops"
        ],
        "description": "Retrieve shop informations",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop": {
                      "type": "object",
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/shops/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Unique identifier of the desired shop.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update Shop",
        "tags": [
          "Shops"
        ],
        "description": "Update a shop",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "X-client-id",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jardin Local",
                    "description": "Display name of a shop."
                  },
                  "image_urls": {
                    "type": "array",
                    "example": [
                      "http://www.image.com/image.jpg"
                    ],
                    "description": "Images of shop"
                  },
                  "email": {
                    "type": "string",
                    "example": "L'email d'une boutique",
                    "description": "Shop's email"
                  },
                  "description": {
                    "type": "string",
                    "example": "La description d'une boutique",
                    "description": "Shop's description"
                  },
                  "baseline": {
                    "type": "string",
                    "example": "Ma boutique est top",
                    "description": "Shop's baseline"
                  },
                  "siret": {
                    "type": "string",
                    "example": "75409821800029",
                    "description": "Shop's siret"
                  },
                  "facebook_link": {
                    "type": "string",
                    "example": "http://www.facebook.com/boutique",
                    "description": "Shop's facebook link"
                  },
                  "instagram_link": {
                    "type": "string",
                    "example": "http://www.instagram.com/boutique",
                    "description": "Shop's instagram link"
                  },
                  "website_link": {
                    "type": "string",
                    "example": "http://www.boutique.com/",
                    "description": "Shop's website link"
                  },
                  "address": {
                    "$ref": "#/components/schemas/Address",
                    "description": "Shop's address"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        }
      }
    },
    "/api/auth/shops": {
      "post": {
        "summary": "Create Shop",
        "tags": [
          "Shops"
        ],
        "description": "Create a shop",
        "security": [
          {
            "authorization": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "X-client-id",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shop": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jardin Local",
                    "description": "Display name of a shop."
                  },
                  "image_urls": {
                    "type": "array",
                    "example": [
                      "http://www.image.com/image.jpg"
                    ],
                    "description": "Images of shop"
                  },
                  "email": {
                    "type": "string",
                    "example": "L'email d'une boutique",
                    "description": "Shop's email"
                  },
                  "description": {
                    "type": "string",
                    "example": "La description d'une boutique",
                    "description": "Shop's description"
                  },
                  "baseline": {
                    "type": "string",
                    "example": "Ma boutique est top",
                    "description": "Shop's baseline"
                  },
                  "siret": {
                    "type": "string",
                    "example": "75409821800029",
                    "description": "Shop's siret"
                  },
                  "facebook_link": {
                    "type": "string",
                    "example": "http://www.facebook.com/boutique",
                    "description": "Shop's facebook link"
                  },
                  "instagram_link": {
                    "type": "string",
                    "example": "http://www.instagram.com/boutique",
                    "description": "Shop's instagram link"
                  },
                  "website_link": {
                    "type": "string",
                    "example": "http://www.boutique.com/",
                    "description": "Shop's website link"
                  },
                  "address": {
                    "$ref": "#/components/schemas/Address",
                    "description": "Shop's address"
                  }
                },
                "required": [
                  "name,",
                  "address,",
                  "email,",
                  "siret"
                ]
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "components": {
    "securitySchemes": {
      "authorization": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    },
    "schemas": {
      "Shop": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Unique identifier of a shop."
          },
          "name": {
            "type": "string",
            "example": "Jardin Local",
            "description": "Display name of a shop."
          },
          "slug": {
            "type": "string",
            "example": "jardin-local",
            "description": "Slug of a shop."
          },
          "image_urls": {
            "type": "array",
            "example": [
              "http://www.image.com/image.jpg"
            ],
            "description": "Images of shop"
          },
          "description": {
            "type": "string",
            "example": "La description d'une boutique",
            "description": "Shop's description"
          },
          "siret": {
            "type": "string",
            "example": "75409821800029",
            "description": "Shop's siret"
          },
          "email": {
            "type": "string",
            "example": "boutique@email.com",
            "description": "Shop's email"
          },
          "baseline": {
            "type": "string",
            "example": "Ma boutique est top",
            "description": "Shop's baseline"
          },
          "facebook_link": {
            "type": "string",
            "example": "http://www.facebook.com/boutique",
            "description": "Shop's facebook link"
          },
          "instagram_link": {
            "type": "string",
            "example": "http://www.instagram.com/boutique",
            "description": "Shop's instagram link"
          },
          "website_link": {
            "type": "string",
            "example": "http://www.boutique.com/",
            "description": "Shop's website link"
          },
          "address": {
            "$ref": "#/components/schemas/Address",
            "description": "Shop's address"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "streetNumber": {
            "type": "string",
            "example": "33",
            "description": "Address's street number"
          },
          "route": {
            "type": "string",
            "example": "Rue Georges Bonnac",
            "description": "Address's route"
          },
          "locality": {
            "type": "string",
            "example": "Bordeaux",
            "description": "Address's locality"
          },
          "country": {
            "type": "string",
            "example": "France",
            "description": "Address's country"
          },
          "postalCode": {
            "type": "string",
            "example": "33000",
            "description": "Address's postal code"
          },
          "latitude": {
            "type": "float",
            "example": 44.82408,
            "description": "Address's latitude"
          },
          "longitude": {
            "type": "float",
            "example": -0.62295,
            "description": "Address's longitude"
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "example": "Lundi",
            "description": "Day of week"
          },
          "openMorning": {
            "type": "string",
            "example": "12h00",
            "description": "Time of opening morning"
          },
          "closeMorning": {
            "type": "string",
            "example": "12h00",
            "description": "Time of closing morning"
          },
          "openAfternoon": {
            "type": "string",
            "example": "12h00",
            "description": "Time of opening afternoon"
          },
          "closeAftenoon": {
            "type": "string",
            "example": "12h00",
            "description": "Time of closing afternoon"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Unique identifier of a product."
          },
          "name": {
            "type": "string",
            "example": "Chaise longue",
            "description": "Display name of a product."
          },
          "slug": {
            "type": "string",
            "example": "chaise-longue",
            "description": "Slug of a product."
          },
          "description": {
            "type": "string",
            "example": "Chaise longue pour jardin ext√©rieur.",
            "description": "Description of a product."
          },
          "category": {
            "$ref": "#/components/schemas/Category",
            "description": "Category of a product."
          },
          "brand": {
            "type": "string",
            "example": "Lafuma",
            "description": "Brand of a product."
          },
          "status": {
            "type": "string",
            "example": "online",
            "default": "not_online",
            "enum": [
              "not_online",
              "online",
              "draft_cityzen",
              "submitted",
              "refused"
            ],
            "description": "Status of a product."
          },
          "sellerAdvice": {
            "type": "string",
            "example": "Nettoyez votre mobilier √† l‚Äôeau claire ou savonneuse sans d√©tergent.",
            "description": "Seller advice of a product"
          },
          "isService": {
            "type": "boolean",
            "example": false,
            "description": "This product is a merchandise or a service."
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "https://static.wikia.nocookie.net/charabattles/images/e/eb/Chuck_norris.jpg/revision/latest?cb=20170412123612&path-prefix=fr",
              "https://leserigraphe.com/wp-content/uploads/2019/10/Walker-Texas-Ranger.jpg"
            ],
            "default": [

            ],
            "description": "List of product images urls"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant"
            },
            "description": "List of variants."
          },
          "citizenAdvice": {
            "type": "string",
            "example": "Tr√®s belle chaussure, confortable et ind√©modable ! Elle vous donnera un look sympa, id√©al avec un jean slim. Attention de bien pr√©voir une taille au-dessus, chausse un peu petit.",
            "description": "Citizen advice of a product"
          },
          "origin": {
            "type": "string",
            "example": "France",
            "description": "Origin of product."
          },
          "allergens": {
            "type": "string",
            "example": "Contient des traces de fruit √† coques",
            "description": "Advice of potencial allergens."
          },
          "composition": {
            "type": "string",
            "example": "Oeuf, sucre",
            "description": "Composition of product."
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Unique identifier of a category."
          },
          "name": {
            "type": "string",
            "example": "Mobilier ext√©rieur",
            "description": "Display name of a category."
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "description": "List of children category."
          }
        }
      },
      "Variant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Unique identifier of a variant."
          },
          "basePrice": {
            "type": "number",
            "format": "double",
            "example": 20.5,
            "description": "Base price of a variant."
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "example": 20.5,
            "description": "Weight in grams of a variant."
          },
          "quantity": {
            "type": "integer",
            "example": 20,
            "description": "Quantity in stock of a variant."
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "https://static.wikia.nocookie.net/charabattles/images/e/eb/Chuck_norris.jpg/revision/latest?cb=20170412123612&path-prefix=fr",
              "https://leserigraphe.com/wp-content/uploads/2019/10/Walker-Texas-Ranger.jpg"
            ],
            "default": [

            ],
            "description": "List of variant images urls"
          },
          "isDefault": {
            "type": "boolean",
            "default": false,
            "description": "Default state of a variant."
          },
          "goodDeal": {
            "$ref": "#/components/schemas/GoodDeal",
            "description": "Good deal of a variant."
          },
          "characteristics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Characteristic"
            },
            "description": "List of characteristics."
          }
        }
      },
      "Characteristic": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "color",
            "enum": [
              "color",
              "size"
            ],
            "description": "Type of a characteristic."
          },
          "value": {
            "type": "string",
            "example": "blue",
            "description": "Display name of a characteristic."
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "GoodDeal": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "string",
            "format": "date",
            "example": "20/01/2021",
            "description": "Start date of a good deal."
          },
          "endAt": {
            "type": "string",
            "format": "date",
            "example": "16/02/2021",
            "description": "End date of a good deal."
          },
          "discount": {
            "type": "integer",
            "example": "20",
            "minimum": 1,
            "maximum": 100,
            "description": "Discount amount of a good deal."
          }
        },
        "required": [
          "startAt",
          "endAt",
          "discount"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 400,
            "description": "Status of an error."
          },
          "message": {
            "type": "string",
            "example": "Bad Request",
            "description": "Message of an error."
          },
          "detail": {
            "type": "string",
            "example": "The syntax of the query is incorrect.",
            "description": "Detail message of an error."
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "",
            "description": "Message of an error."
          },
          "message": {
            "type": "string",
            "example": "Unauthorized",
            "description": "Display description error."
          },
          "status": {
            "type": "integer",
            "example": 401,
            "description": "Status of an error."
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "The syntax of the query is incorrect.",
            "description": "Message of an error."
          },
          "message": {
            "type": "string",
            "example": "Bad Request",
            "description": "Display description error."
          },
          "status": {
            "type": "integer",
            "example": 400,
            "description": "Status of an error."
          }
        }
      },
      "InternalError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "",
            "description": "Message of an error."
          },
          "message": {
            "type": "string",
            "example": "Internal Error",
            "description": "Display description error."
          },
          "status": {
            "type": "integer",
            "example": 500,
            "description": "Status of an error."
          }
        }
      },
      "UnprocessableEntity": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "Password or email invalid.",
            "description": "Message of an error."
          },
          "message": {
            "type": "string",
            "example": "Unprocessable Entity",
            "description": "Display description error."
          },
          "status": {
            "type": "integer",
            "example": 422,
            "description": "Status of an error."
          }
        }
      },
      "Forbidden": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "",
            "description": "Message of an error."
          },
          "message": {
            "type": "string",
            "example": "Forbidden",
            "description": "Display description error."
          },
          "status": {
            "type": "integer",
            "example": 403,
            "description": "Status of an error."
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "Product not found",
            "description": "Message of an error."
          },
          "message": {
            "type": "string",
            "example": "Not found",
            "description": "Display description error."
          },
          "status": {
            "type": "integer",
            "example": 404,
            "description": "Status of an error."
          }
        }
      }
    }
  }
}